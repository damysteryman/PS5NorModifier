@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
	<MudAppBar Dense="true">
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label="Toggle Light/Dark Mode"/>
	</MudAppBar>
	<MudDrawer @bind-Open="@_drawerOpen">
		<MudDrawerHeader>
			<MudStack Row="false" Justify="Justify.Center">
				<MudText Typo="Typo.h5">PS5 NOR Modifier</MudText>
			</MudStack>
		</MudDrawerHeader>
		<NavMenu/>
	</MudDrawer>
	<MudMainContent>
		<MudContainer Class="px-8 py-6">
			@Body
		</MudContainer>
	</MudMainContent>
</MudLayout>

@code {
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider = null!;

	bool _drawerOpen = true;

	void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }
}
